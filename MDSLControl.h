//==================================================// MDSL ACCESS LIBRARY - Version 1.1 (2016)//==================================================// NCM - Núcleo de Computação Musical da UnB//  • Carlos Eduardo Mello//  • José de Abreu Carvalho Bacelar//==================================================// MDSLControl.h#ifndef _MDSL_CONTROL_H_#define _MDSL_CONTROL_H_#include <stdlib.h>#include <iostream>#include <fstream>#include <string>#include <stack>using namespace std;// ========================================================== ERROR CODES// Comment out this line to disable debugging messages://#define _USE_COUT_DEBUG_// ERROR DATA TYPEtypedef short EP; // Erro de Programa (Program Error)const short MAX_MENSAGEM_DE_ERRO = 500;enum{    EPzeroERROR = 0,    EPinsuficientMemoryERROR = 1,        // LOADING TREE        // returned when MDSLControl cant find tag during parsing of the MDSL document    EPopenTagNotFoundERROR,    // returned when open tag has illegal characters    EPinvalidOpenTagERROR,    // returned when an element tag is not properly closed in an MDSL document    EPcloseTagNotFoundERROR,    // Return when creating address table and tableSize is not set correctly    EPemptyTreeERROR,        // BUILSING ADDRESS TABLE        EPInvalidTableSizeERROR,        // LOADING STRUCTURE LIST        // Returned when string passed to MDSLLoadStructureList() is empty    EPemptyStructListERROR,    // Returned when there is any problem with the provided    // structure list (returns, invalid white space, etc.)    EPbadStructListERROR,    // returned when there is nto enough memory for new definition link    EPcouldntCreateDefLinkERROR,    // It was not possible to open the document fiels for parsing    EPfileNotFoundERROR,    // it was not possible to open the struture list file for loading    EPStructureListNotFoundERROR,    // strucure list was null after restacking index numbers    EPcouldntStoreDefLinkAddressesERROR,    // memory was not enough to create the typeList in a given definition link    EPcouldntCreateTypeListERROR,    // Document does not match this application's structure list    EPinvalidDocumentERROR,        // ADDING/MODIFYING DATA        // Couldn't add new element node...    EPCouldntAddElementERROR,        // Couldn't modify data string...    EPCouldntSetDataStringERROR    };// ========================================================== TYPEDEFSstruct	MDSLNode{					string		elemName;					string		elemData;					long		id;					MDSLNode	* 	parent;					MDSLNode	* 	children;					MDSLNode    *	next;				};				typedef struct MDSLNode * MDSLNodePtr;struct	MDSLAddress  {					    long		id;					    MDSLNode *	node;				    };				    typedef struct MDSLAddress * MDSLAddressPtr;				    struct MDSLElemDef   {                        string  nameTag;                        short   mode;                        short   sibs;                        short   textType;                        short   numOfTypes;                        MDSLElemDef* *   typeList;                        MDSLElemDef  *    next;                    };                    typedef MDSLElemDef *    MDSLElemDefPtr;				// ========================================================== CLASS 				class MDSLControl {	private:		// VARIABLES	MDSLNode		 top;	long		    nextId;	MDSLAddressPtr   addressTable;	long            tableSize;	long            currAddress;	MDSLElemDefPtr   structureList;		// INTERNAL CALLS:		// Data Tree	EP			LoadTree(MDSLNodePtr theNode);	string &	GetString(MDSLNodePtr theNode);	bool		ValidTag(string theTag);	string		StripTagMarks(string theTag);	MDSLNodePtr	InsertNewElement(MDSLNodePtr parentNode, string elementName, string theContent);	MDSLNodePtr GetNode(long nodeId);    long        GetID(MDSLNodePtr theNode);        	void		ReleaseTree(MDSLNodePtr theNode);		// Address Table	EP          PrepareAddressTable(long tSize);	EP          LoadAddressTable(MDSLNodePtr theNode);    EP          AddAddress(MDSLAddress newAddress);		// Structure List	string      ExtractParam(string & theLine);	void        InsertDefLink(MDSLElemDefPtr newDef);	EP          LoadStructureList(string & structList);	bool        CheckNode(MDSLNodePtr theNode);	bool        CheckTree(MDSLNodePtr theNode);	void		ReleaseStructureList(void);	    public:		// CONSTRUCTOR & DESTRUCTOR	MDSLControl(void);	~MDSLControl(void);		// PARSING	EP	OpenFile(string fileName, string structListFile);		// GETTING INFO	long	GetNumberOfElements(long elemId);	long	GetNumberOfElements(long elemId, string tagName);	long	GetMainID(void);	long    GetID(long fatherId, string elemTag, long index);	string	GetTag(long elemId);		// GETTING DATA	string	GetDataString(long elemId);	long	GetDataLong(long elemId);	double	GetDataDouble(long elemId);		// SETTING DATA    long    CreateMainElement(string tag);    EP      AddNewElement(long parentId, string tag, string data);	EP		SetDataString(long elemId, string dataString);	EP		SetDataLong(long elemId, long dataLong);	EP		SetDataDouble(long elemId, double dataDouble);		// NUMBER UTILITIES	long    Power(long e, long b);	bool    IsNumber(string numString);	long    StringToLong(string numString);	double  StringToDouble(string numString);		// WRITING FILE	EP WriteToFile(string fileName);    bool WriteTree(ofstream & outputFile, MDSLNodePtr entryPoint);};#endif